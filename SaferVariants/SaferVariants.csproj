<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <Configuration>Release</Configuration>
    </PropertyGroup>
    
    <PropertyGroup>
        <!-- NuGet stuff -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <PackageId>SaferVariants</PackageId>
        <PackageVersion>1.7.0</PackageVersion>
        <Title>SaferVariants</Title>
        <Authors>Carl Erik Patrik Iwarson</Authors>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageProjectUrl>https://github.com/Szune/SaferVariants</PackageProjectUrl>
        <RepositoryUrl>https://github.com/Szune/SaferVariants</RepositoryUrl>
        <Description>
            An alternative to returning null and throwing exceptions as indications of a value being present and errors occurring.
        </Description>
        <PackageReleaseNotes>
* Adds Flatten() extension methods to IOption and IResult to help reduce nesting
* Adds IOption.HandleNone() to handle the None case in a fluent fashion
* Adds IResult.MapErr() to transform errors
        </PackageReleaseNotes>
        <Copyright>Copyright Â© 2021 Carl Erik Patrik Iwarson</Copyright>
    </PropertyGroup>
</Project>
